// *** Parser rules ***

grammar: (entry _NL)* entry?

entry: rule | token_rule

// ### Parser ###

rule: RULE_NAME _NL_COLON rule_body

rule_body: rule_part+ (NL_PIPE rule_part+)*

binding: RULE_NAME "="

rule_part: binding? (rule_elem suffix? | LBRACKET rule_body RBRACKET)

?rule_elem: "(" rule_body ")" | RULE_NAME | TOKEN_NAME | TOKEN_LIT

?suffix: PLUS | STAR | QUEST_MARK

// ### Lexer ###

token_rule: TOKEN_NAME _NL_COLON TOKEN_LIT

// *** Lexer rules ***

PLUS: "+"
STAR: "*"
QUEST_MARK: "?"
LBRACKET: "["
RBRACKET: "]"

_NL_COLON: _NL? ":"
NL_PIPE: _NL? "|"
_NL: /(\r?\n)+\s*/
TOKEN_NAME: /[A-Z][A-Z0-9_]*/
RULE_NAME: /[a-z][a-z0-9_]*/
TOKEN_LIT: /[\"']/ /.*?/ /[\"']/

WS: /[ \t\f]/+
COMMENT: /#[^\r\n]*\s*/
%ignore COMMENT
%ignore WS
